# Tmux config for mainly working in iterm2 on a mac and tmux >= 3.0a
# the backtick is a good leaader (but I cannot use it then ins JS or Markdown.)
# C-\ is actually good.
unbind C-b # C-b clashes with vim, C-a with bash and emacs
set -g prefix C-s

# use all the beautiful colours
set -g default-terminal "screen-256color"

# increase history
set-option -g history-limit 10000

# Start window numbering at 1 (it hurts but it's faster to type)
set -g base-index 1
set -g renumber-windows on
set-window-option -g pane-base-index 1

# basic
set -g status-keys "emacs" # the vim emulation is not so good

# Switche between panes (without prefix key)
bind-key -n C-h select-pane -L
bind-key -n C-j select-pane -D
# not_tmux='`echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"` || `echo "#{pane_current_command}" | grep -iqE "(^|\/)fzf"`'
bind-key -n C-k send-keys C-k # erase text instead of movin
bind-key -n C-l select-pane -R

# re-bind existing new-window shortcut to open current directory
bind c new-window -c '#{pane_current_path}'

# reload tmux config
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# kill it with fire
bind Q send-keys "tmux kill-server" Enter

bind-key s split-window -v -c '#{pane_current_path}'
bind-key v split-window -h -c '#{pane_current_path}'

# not so often used, but good
bind-key - split-window -fv -c '#{pane_current_path}'
bind-key \\ split-window -fh -c '#{pane_current_path}'

# modify window size with Shift and Arrow keys
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

# resize panes size with larger sizes using Shift and Arrow keys
bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

bind-key -r < swap-window -t -1
bind-key -r > swap-window -t +1

# break pane out detached (move it to new window in the background)
bind b break-pane -d

# jump to another session/window/pane (or just see what's going on)
bind C-j choose-tree

# toggle mouse mode
# bind-key m setw mouse

# improve scrolling and mouse support
set -g mouse on
set -g terminal-overrides 'xterm*:smcup@:rmcup@' # does the same as mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e; send-keys -M'"

# Statusbar
set -g status on
set -g status-position top
set -g status-justify centre # center window list for clarity
set -g status-bg colour235 #base02
set -g status-fg '#eeeeee'
# set -g status-attr dim #invalid TODO

set -g status-left-length 75
set -g status-left "[#{session_name}] #[fg=green]#h  #[fg=brightblue]#(dig +short myip.opendns.com @resolver1.opendns.com) #[fg=yellow]#(ifconfig en0 | grep 'inet ' | awk '{print \"en0 \" $2}') #(ifconfig en1 | grep 'inet ' | awk '{print \"en1 \" $2}') #(ifconfig en3 | grep 'inet ' | awk '{print \"en3 \" $2}') #[fg=red]#(ifconfig tun0 | grep 'inet ' | awk '{print \"vpn \" $2}') #[fg=green]#(/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport -I | awk -F': ' '/ SSID/{print $2}') "

set -g status-right-length 75
# set -g status-right "#[fg=blue]#S #I:#P #[fg=yellow]: %d %b %Y #[fg=green]: %l:%M %p : #(date -u | awk '{print $4}') :"
set -g status-right "#(curl -s 'https://wttr.in/london?m&format=1') #(battery -t) #(date '+%a %d. %b  %I:%M')"


set-option -g window-status-format '#{window_index}:#{window_name}'
set-option -g window-status-current-format '[#{window_index}:#{window_name}]'

# window status
set-window-option -g window-status-style fg=brightblue #base0
set-window-option -g window-status-style bg=colour236
set-window-option -g window-status-style dim

set-window-option -g window-status-current-style fg=brightred #orange
set-window-option -g window-status-current-style bg=colour236
set-window-option -g window-status-current-style bright

# using clipboard and scrolling
# Use vim keybindings in copy mode
setw -g mode-keys vi

# Set that stupid Esc-Wait off, so VI works again
set-option -sg escape-time 0


set-option -g default-command 'reattach-to-user-namespace -l $SHELL' # Sierra tmux fix

# Setup 'v' to begin selection as in Vim
# bind-key -T vi-copy v begin-selection
# bind-key -T vi-copy V send-keys -X select-line # still required?
# bind-key -T vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
# unbind -T vi-copy Enter
# bind-key -T vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# own shortcuts
bind-key k split-window -h -c ~/code/knowledge "vim +CtrlP"
# bind-key c split-window -h -c ~/code/dotfiles "vim .tmux.conf"
